environment:
  # for more python versions have a look at
  # https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
  matrix:
  # 64 julia-0.6 Python-27
  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x64/0.6/julia-0.6-latest-win64.exe"
    PYTHONDIR: "C:\\Python27-x64"

  # 32 julia-0.6 Python-27
  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x86/0.6/julia-0.6-latest-win32.exe"
    PYTHONDIR: "C:\\Python27"

  # 64 julia-0.6 Python-35
  - JULIA_URL: "https://julialang-s3.julialang.org/bin/winnt/x64/0.6/julia-0.6-latest-win64.exe"
    PYTHONDIR: "C:\\Python35-x64"

  # 32 julia-latest Python-27
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
    PYTHONDIR: "C:\\Python27"

  # 64 julia-latest Python-27
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
    PYTHONDIR: "C:\\Python27-x64"

  # 64 julia latest Python-35
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
    PYTHONDIR: "C:\\Python35-x64"

  # 64 julia latest Cross Version
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x64/julia-latest-win64.exe"
    PYTHONDIR: "C:\\Python35-x64"
    CROSS_VERSION_PATH: "C:\\Python27-x64"

  # 32 julia latest Cross Version
  - JULIA_URL: "https://julialangnightlies-s3.julialang.org/bin/winnt/x86/julia-latest-win32.exe"
    PYTHONDIR: "C:\\Python35"
    CROSS_VERSION_PATH: "C:\\Python27"

matrix:
 allow_failures:
  - CROSS_VERSION_PATH: "C:\\Python27-x64"
  - CROSS_VERSION_PATH: "C:\\Python27"

branches:
  only:
    - master

notifications:
  - provider: Email
    on_build_success: false
    on_build_failure: false
    on_build_status_changed: false

install:
# If there's a newer build queued for the same PR, cancel this one
  - ps: if ($env:APPVEYOR_PULL_REQUEST_NUMBER -and $env:APPVEYOR_BUILD_NUMBER -ne ((Invoke-RestMethod `
        https://ci.appveyor.com/api/projects/$env:APPVEYOR_ACCOUNT_NAME/$env:APPVEYOR_PROJECT_SLUG/history?recordsNumber=50).builds | `
        Where-Object pullRequestId -eq $env:APPVEYOR_PULL_REQUEST_NUMBER)[0].buildNumber) { `
        throw "There are newer queued builds for this pull request, failing early." }
  # Download most recent Julia Windows binary
  - ps: (new-object net.webclient).DownloadFile(
        $env:JULIA_URL,
        "C:\projects\julia-binary.exe")
  # Run installer silently, output to C:\projects\julia
  - C:\projects\julia-binary.exe /S /D=C:\projects\julia

build_script:
  - "SET PATH=%PYTHONDIR%;%PYTHONDIR%\\Scripts;%PATH%"
  - "\"C:\\Program Files (x86)\\Microsoft Visual Studio 14.0\\VC\\bin\\amd64\\editbin.exe\" %PYTHONDIR%\\python.exe /STACK:8000000"
  # - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.add(\"PyCall\"); Pkg.init(); Pkg.resolve()"
  # - C:\projects\julia\bin\julia -e "using PyCall; @assert isdefined(:PyCall); @assert typeof(PyCall) === Module"
  - "SET PYTHON=%PYTHONDIR%\\python.exe"
  - C:\projects\julia\bin\julia -e "versioninfo(); Pkg.add(\"PyCall\")"

test_script:
  - "SET PATH=%PYTHONDIR%;%PYTHONDIR%\\Scripts;C:\\projects\\julia\\bin;%PATH%"
  - python --version
  - dir
  - ps: if (Test-Path Env:\CROSS_VERSION_PATH) { Invoke-Expression "$env:CROSS_VERSION_PATH -m unittest discover" }
  # - python -c "import julia; julia.Julia(debug=True)"
  - python -m unittest discover
