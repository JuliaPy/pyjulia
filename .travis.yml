language: python
os:
  - linux
python:
  - "2.7"
  - "3.6"
env:
  matrix:
    - JULIA_VERSION=0.6.4 CROSS_VERSION=1
    - JULIA_VERSION=1.0.0
    - JULIA_VERSION=nightly
  global:
    - TOXENV=py
matrix:
  # Python environment is not functional on OS X
  include:
      - language: generic
        env:
          - PYTHON=python2
          - JULIA_VERSION=1.0.0
          # - JULIA_VERSION=nightly
        os: osx
      - language: generic
        env:
          - PYTHON=python2
          - JULIA_VERSION=0.6.4
          - CROSS_VERSION=1
        os: osx
      - language: generic
        env:
          - PYTHON=python3
          - JULIA_VERSION=1.0.0
          # - JULIA_VERSION=nightly
        os: osx
      - language: generic
        env:
          - PYTHON=python3
          - JULIA_VERSION=0.6.4
          - CROSS_VERSION=1
        os: osx
  allow_failures:
    - env: JULIA_VERSION=nightly
branches:
  only:
    - master
notifications:
  email: false
before_script:
  - echo ./ci/install-julia.sh "$JULIA_VERSION"
  - ./ci/install-julia.sh "$JULIA_VERSION"
  - if [ "$TRAVIS_OS_NAME" = "osx" -a "$PYTHON" = "python3" ]; then brew update; brew upgrade python || echo "Ignoring errors..."; fi
  - if [ "$TRAVIS_OS_NAME" = "osx" -a "$PYTHON" = "python2" ]; then brew update; brew list python@2 &>/dev/null || brew install python@2 || echo "Ignoring errors..."; fi
  # Ignoring errors from brew since it may actually be OK to do so.
  # Following which command will catch installation failure:
  - PYTHON=${PYTHON:-python}
  - which $PYTHON
  - $PYTHON -m pip --version
  - $PYTHON -m pip install --quiet tox coveralls
  - julia --color=yes -e 'VERSION >= v"0.7.0-DEV.5183" && using Pkg; Pkg.add("PyCall")'
script:

  # "py,py27" below would be redundant when the main interpreter is
  # Python 2.7 but it simplifies the CI setup.
  - if [ "$CROSS_VERSION" = "1" ]; then
    $PYTHON -m tox -e py,py27 -- -s;
    fi

  - PYJULIA_TEST_REBUILD=yes $PYTHON -m tox -- --cov=julia -s

after_success:
  - coveralls
