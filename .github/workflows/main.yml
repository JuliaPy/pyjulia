name: Main workflow

on:
  push:
    branches:
      - master
    tags: '*'
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os:
          - ubuntu-latest
          - macos-latest
          - windows-latest
        architecture: [x64, x86]
        python-version:
          - '3.9'
          - '3.12'
        julia-version:
          - '1.6'
          - '1.9'
          - '1'
        exclude:
          - os: ubuntu-latest
            architecture: x86
          - os: macos-latest
            architecture: x86
          - os: macos-latest
            julia-version: '1.6'
          - os: windows-latest
            julia-version: '1.6'
          - os: macos-latest
            julia-version: 'nightly'
          - os: windows-latest
            julia-version: 'nightly'
        include:
          # Python 3.8 for testing `test_compiled_modules_no`:
          - os: ubuntu-latest
            architecture: x64
            python-version: '3.8'
            julia-version: '1'
          - os: macos-latest
            architecture: x64
            python-version: '3.8'
            julia-version: '1'
          - os: windows-latest
            architecture: x64
            python-version: '3.8'
            julia-version: '1'
      fail-fast: false
    name: Test 
      py${{ matrix.python-version }}
      jl${{ matrix.julia-version }}
      ${{ matrix.os }} ${{ matrix.architecture }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          architecture: ${{ matrix.architecture }}
      - name: Setup julia
        uses: julia-actions/setup-julia@v2
        with:
          version: ${{ matrix.julia-version }}
          arch: ${{ matrix.architecture }}
      - run: python src/julia/find_libpython.py --list-all --verbose
      - name: Install tox
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade tox
      - name: Install PyCall
        run: python ci/install_pycall.py
      - name: Run test
        run: python -m tox -- --verbose --cov=julia
        id: tox-tests
        continue-on-error: ${{ matrix.julia-version == 'nightly' || (matrix.os == 'windows-latest' && matrix.architecture == 'x86') }}
        env:
          CI: 'true'  # run tests marked by @only_in_ci
          TOXENV: py
          PYJULIA_TEST_REBUILD: 'yes'
      - run: cat .tox/py/log/pytest.log
        if: always()
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: steps.tox-tests.outcome == 'success'
        with:
          file: ./coverage.xml
          name: codecov-umbrella
      - name: Report allowed failures
        if: steps.tox-tests.outcome != 'success'
        run: echo "Allowed failure for this configuration."

  check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        toxenv: ['style', 'doc']
      fail-fast: false
    name: Check ${{ matrix.toxenv }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
      - run: python -m pip install --upgrade tox
      - run: python -m tox -e ${{ matrix.toxenv }}
